const express = require("express")
const {CreatecategoryDetails,viewcategoryDetails,deletecategoryDetails,updatecategoryDetails,getSinglecategoryDetails} = require("../controller/category_controller")
const router = express.Router()
/**
 * @swagger
 * components:
 *   schemas:
 *     category:
 *       type: object
 *       required:
 *         - categoryId
 *         - categoryName
 *       properties:
 *         categoryId:
 *           type: integer
 *           description: Autogeneration
 *         categoryName:
 *           type: string
 *           description: categoryName
 *       example:
 *         categoryId: autoGenerated
 *         categoryName: electrical
 */

/**
 * @swagger
 * /api/v1/categories:
 *   get:
 *     summary: get all category
 *     tags: [category]
 *     responses:
 *       200:
 *         description: get All category
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               items:
 *                 $ref: '#/components/schemas/category'
 */
router.route("/categories").get(viewcategoryDetails)

// http://localhost:13415/api/v1/categories method GET

/**
 * @swagger
 * /api/v1/category:
 *   post:
 *     summary: add a new category
 *     tags: [category]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/category'
 *     responses:
 *       200:
 *         description: create category successfull
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/category'
 *       500:
 *         description: Some server error
 */
 router.route("/category").post(CreatecategoryDetails)

//  http://localhost:13415/api/v1/category method post

 /**
* @swagger
* /api/v1/category/{categoryId}:
*   delete:
*     summary: Delete a category
*     tags: [category]
*     parameters:
*         - in: path
*           name: categoryId
*           required: true
*           description: categoryId is required
*           schema:
*              type: string
*     responses:
*       200:
*         description: category deleted successfully
*/

router.route("/category/:categoryId").delete(deletecategoryDetails)

// http://localhost:13415/api/v1/category/:categoryId method delete

/**
 * @swagger
 * /api/v1/category/{categoryId}:
 *   put:
 *     summary: update a category by ID
 *     tags: [category]
 *     description: update a category by their unique ID.
 *     parameters:
 *       - in: path
 *         name: categoryId
 *         required: true
 *         description: ID of the category to retrieve
 *         schema:
 *           type: string
 *     responses:
 *       200:
 *         description: Successfully retrieved the category
 *       404:
 *         description: category not found
 */
router.route("/category/:categoryId").put(updatecategoryDetails)

// http://localhost:13415/api/v1/category/:categoryId  method put

/**
 * @swagger
 * /api/v1/getSinglecategoryDetails/{categoryId}:
 *   get:
 *     summary: Get a category by ID
 *     tags: [category]
 *     description: Retrieve a category by their unique ID.
 *     parameters:
 *       - in: path
 *         name: categoryId
 *         required: true
 *         description: ID of the category to retrieve
 *         schema:
 *           type: string
 *     responses:
 *       200:
 *         description: Successfully retrieved the category
 *       404:
 *         description: category not found
 */
router.route("/getSinglecategoryDetails/:categoryId").get(getSinglecategoryDetails)
 
module.exports = router


  